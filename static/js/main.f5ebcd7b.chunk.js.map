{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","card_component","map","user","i","StrictMode","SearchBox","type","placeholder","onChange","searchChange","Scroll","style","overflowY","borderTop","height","children","ErrorBoundary","state","hasError","this","setState","Component","App","onSearchChange","event","search_field","target","value","fetch","then","response","json","users","filtered_robots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sNAceA,EAZF,SAACC,GACZ,OACE,sBAAKC,UAAU,yDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA8CC,IAAI,WAC1D,gCACE,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCUHC,EAfE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAiBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OACE,cAAC,EAAD,CACET,GAAIK,EAAOI,GAAGT,GAEdE,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAFZM,MAOX,OAAO,cAAC,IAAMC,WAAP,UAAmBJ,KCAbK,EAbG,SAACd,GACjB,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEc,KAAK,SACLC,YAAY,oBACZf,UAAU,mCACVgB,SAAUjB,EAAMkB,kBCOTC,EAdA,SAACnB,GACd,OACE,qBACEoB,MAAO,CACLC,UAAW,SACXC,UAAW,kBACXC,OAAQ,SAJZ,SAOGvB,EAAMwB,YCWEC,E,kDAnBb,WAAYzB,GAAQ,IAAD,8BACjB,gBACK0B,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,WACEC,KAAKC,SAAS,CAAEF,UAAU,M,oBAG5B,WACE,OAAIC,KAAKF,MAAMC,SACN,yDAEFC,KAAK5B,MAAMwB,a,GAhBMM,aC+CbC,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,aAAcD,EAAME,OAAOC,SAb3C,EAAKV,MAAQ,CACXlB,OAAQ,GACR0B,aAAc,IAJJ,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,6CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKZ,SAAS,CAAErB,OAAQiC,S,oBAO7C,WACE,MAAiCb,KAAKF,MAA9BlB,EAAR,EAAQA,OAAQ0B,EAAhB,EAAgBA,aACVQ,EAAkBlC,EAAOmC,QAAO,SAACC,GACrC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASZ,EAAaW,kBAGxD,OAAKrC,EAAOuC,OAIR,sBAAK9C,UAAU,KAAf,UACE,+CACA,cAAC,EAAD,CAAWiB,aAAcU,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQkC,WARnB,2D,GA1BKM,IAAMlB,WCMTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAM7C,WAAP,UACE,cAAC,EAAD,MAEF8C,SAASC,eAAe,SAM1BX,M","file":"static/js/main.f5ebcd7b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw1 shadow-5 ba\">\r\n      <img src={`https://robohash.org/${props.id}?200x200`} alt=\"robots\"></img>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <p>{props.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  const card_component = robots.map((user, i) => {\r\n    return (\r\n      <Card\r\n        id={robots[i].id}\r\n        key={i}\r\n        name={robots[i].name}\r\n        email={robots[i].email}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <React.StrictMode>{card_component}</React.StrictMode>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search the robots\"\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        onChange={props.searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        borderTop: \"1px solid black\",\r\n        height: \"500px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oops. That is not good!</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport CardList from \"../components/CardList.js\";\r\nimport SearchBox from \"../components/SearchBox.js\";\r\nimport Scroll from \"../components/Scroll.js\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary.js\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      search_field: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ search_field: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { robots, search_field } = this.state;\r\n    const filtered_robots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(search_field.toLowerCase());\r\n    });\r\n\r\n    if (!robots.length) {\r\n      return <h1>Loading robot list...</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1> ROBOFRIENDS </h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filtered_robots} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// TODO: Add double filtration to search box\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./containers/App.js\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}